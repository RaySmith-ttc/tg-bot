[versions]
kotlin = "2.2.0"

assertj = "3.27.3"
benManes-versions = "0.52.0"
dokka = "2.0.0"
exposed = "0.45.0"
h2 = "2.2.220"
hikari = "5.0.1"
htmldiff = "1.0.0"
jsoup = "1.18.1"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.8.1"
konsist = "0.17.3"
ktor = "3.1.2"
log4j = "2.24.3"
seskar = "4.10.0"
setupapp = "1.8"
slf4j = "2.0.17"
utils = "3.3.2"

[libraries]

# kotlin
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# ktor
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-network-tlsCertificates = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }

# ktor-client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# ktor-server
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-cors-jvm = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-callLogging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }

# js
seskar-core = { module = "io.github.turansky.seskar:seskar-core", version.ref = "seskar" }

# database
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }

# raysmith
raysmith-utils = { module = "ru.raysmith:utils", version.ref = "utils" }
raysmith-htmldiff = { module = "ru.raysmith:htmldiff", version.ref = "htmldiff" }

# logging
log4j = { module = "org.apache.logging.log4j:log4j", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

# utils
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# tests
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

[plugins]
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
benManes-versions = { id = "com.github.ben-manes.versions", version.ref = "benManes-versions" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
seskar = { id = "io.github.turansky.seskar", version.ref = "seskar" }
setupapp = { id = "ru.raysmith.setupapp", version.ref = "setupapp" }

[bundles]
database = [
    "exposed-core",
    "exposed-dao",
    "exposed-java-time",
    "hikari",
    "h2"
]
ktor-client = [
    "ktor-client-auth",
    "ktor-client-contentNegotiation",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-okhttp",
    "ktor-client-websockets",
    "ktor-serialization-kotlinx-json",
]
ktor-server = [
    "ktor-client-core",
    "ktor-serialization-kotlinx-json",
    "ktor-server-auth",
    "ktor-server-callLogging-jvm",
    "ktor-server-compression",
    "ktor-server-contentNegotiation",
    "ktor-server-cors-jvm",
    "ktor-server-netty",
    "ktor-server-statusPages",
    "ktor-server-websockets",
]
